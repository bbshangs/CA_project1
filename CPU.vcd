$date
	Fri Dec 11 12:09:38 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module TestBench $end
$var reg 1 ! Clk $end
$var reg 1 " Reset $end
$var reg 1 # Start $end
$var integer 32 $ counter [31:0] $end
$var integer 32 % flush [31:0] $end
$var integer 32 & i [31:0] $end
$var integer 32 ' outfile [31:0] $end
$var integer 32 ( stall [31:0] $end
$scope module CPU $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var wire 1 # start_i $end
$scope module ALU $end
$var wire 32 ) data2_i [31:0] $end
$var wire 32 * data1_i [31:0] $end
$var wire 3 + ALUCtrl_i [2:0] $end
$var reg 32 , data_o [31:0] $end
$upscope $end
$scope module ALU_Control $end
$var wire 10 - funct_i [9:0] $end
$var wire 1 . funct3 $end
$var wire 2 / ALUOp_i [1:0] $end
$var reg 3 0 ALUCtrl_o [2:0] $end
$upscope $end
$scope module Add_PC $end
$var wire 32 1 data2_i [31:0] $end
$var wire 32 2 data_o [31:0] $end
$var wire 32 3 data1_i [31:0] $end
$upscope $end
$scope module Add_PC_Branch $end
$var wire 32 4 data1_i [31:0] $end
$var wire 32 5 data_o [31:0] $end
$var wire 32 6 data2_i [31:0] $end
$upscope $end
$scope module Control $end
$var wire 7 7 Op_i [6:0] $end
$var wire 1 8 NoOp_i $end
$var reg 2 9 ALUOp_o [1:0] $end
$var reg 1 : ALUSrc_o $end
$var reg 1 ; Branch_o $end
$var reg 1 < MemRead_o $end
$var reg 1 = MemWrite_o $end
$var reg 1 > MemtoReg_o $end
$var reg 1 ? RegWrite_o $end
$upscope $end
$scope module Data_Memory $end
$var wire 1 ! clk_i $end
$var wire 32 @ data_o [31:0] $end
$var wire 32 A data_i [31:0] $end
$var wire 32 B addr_i [31:0] $end
$var wire 1 C MemWrite_i $end
$var wire 1 D MemRead_i $end
$upscope $end
$scope module EXMEM $end
$var wire 32 E ALUResult_i [31:0] $end
$var wire 1 ! clk_i $end
$var wire 1 F RegWrite_i $end
$var wire 5 G RDaddr_i [4:0] $end
$var wire 1 H MemtoReg_i $end
$var wire 1 I MemWrite_i $end
$var wire 1 J MemRead_i $end
$var wire 32 K MUX_B_i [31:0] $end
$var reg 32 L ALUResult_o [31:0] $end
$var reg 32 M MUX_B_o [31:0] $end
$var reg 1 D MemRead_o $end
$var reg 1 C MemWrite_o $end
$var reg 1 N MemtoReg_o $end
$var reg 5 O RDaddr_o [4:0] $end
$var reg 1 P RegWrite_o $end
$upscope $end
$scope module Forward_Unit $end
$var wire 5 Q MemRd_i [4:0] $end
$var wire 1 P MemRegWrite_i $end
$var wire 1 R WBRegWrite_i $end
$var wire 5 S WBRd_i [4:0] $end
$var wire 5 T EXRs2_i [4:0] $end
$var wire 5 U EXRs1_i [4:0] $end
$var reg 2 V ForwardA_o [1:0] $end
$var reg 2 W ForwardB_o [1:0] $end
$upscope $end
$scope module Hazard_Detection $end
$var wire 5 X data3_i [4:0] $end
$var wire 5 Y data2_i [4:0] $end
$var wire 5 Z data1_i [4:0] $end
$var wire 1 J MemRead_i $end
$var reg 1 8 NoOp_o $end
$var reg 1 [ PCWrite_o $end
$var reg 1 \ Stall_o $end
$upscope $end
$scope module IDEX $end
$var wire 2 ] ALUOp_i [1:0] $end
$var wire 1 : ALUSrc_i $end
$var wire 1 < MemRead_i $end
$var wire 1 = MemWrite_i $end
$var wire 1 > MemtoReg_i $end
$var wire 1 ? RegWrite_i $end
$var wire 1 ! clk_i $end
$var wire 10 ^ funct_i [9:0] $end
$var wire 32 _ imm_i [31:0] $end
$var wire 32 ` data2_i [31:0] $end
$var wire 32 a data1_i [31:0] $end
$var wire 5 b RS2addr_i [4:0] $end
$var wire 5 c RS1addr_i [4:0] $end
$var wire 5 d RDaddr_i [4:0] $end
$var reg 2 e ALUOp_o [1:0] $end
$var reg 1 f ALUSrc_o $end
$var reg 1 J MemRead_o $end
$var reg 1 I MemWrite_o $end
$var reg 1 H MemtoReg_o $end
$var reg 5 g RDaddr_o [4:0] $end
$var reg 5 h RS1addr_o [4:0] $end
$var reg 5 i RS2addr_o [4:0] $end
$var reg 1 F RegWrite_o $end
$var reg 32 j data1_o [31:0] $end
$var reg 32 k data2_o [31:0] $end
$var reg 10 l funct_o [9:0] $end
$var reg 32 m imm_o [31:0] $end
$upscope $end
$scope module IFID $end
$var wire 1 \ Stall_i $end
$var wire 1 ! clk_i $end
$var wire 32 n instr_i [31:0] $end
$var wire 32 o PC_i [31:0] $end
$var wire 1 p Flush_i $end
$var reg 32 q PC_o [31:0] $end
$var reg 32 r instr_o [31:0] $end
$upscope $end
$scope module If_Branch $end
$var wire 1 ; Branch_i $end
$var wire 32 s data2_i [31:0] $end
$var wire 32 t data1_i [31:0] $end
$var reg 1 u compare $end
$var reg 1 p data_o $end
$upscope $end
$scope module Imm_Gen $end
$var wire 32 v data_i [31:0] $end
$var wire 7 w opcode [6:0] $end
$var wire 12 x imme [11:0] $end
$var wire 32 y data_o [31:0] $end
$upscope $end
$scope module Instruction_Memory $end
$var wire 32 z instr_o [31:0] $end
$var wire 32 { addr_i [31:0] $end
$upscope $end
$scope module MEMWB $end
$var wire 32 | ALUResult_i [31:0] $end
$var wire 1 N MemtoReg_i $end
$var wire 5 } RDaddr_i [4:0] $end
$var wire 32 ~ ReadData_i [31:0] $end
$var wire 1 P RegWrite_i $end
$var wire 1 ! clk_i $end
$var reg 32 !" ALUResult_o [31:0] $end
$var reg 1 "" MemtoReg_o $end
$var reg 5 #" RDaddr_o [4:0] $end
$var reg 32 $" ReadData_o [31:0] $end
$var reg 1 R RegWrite_o $end
$upscope $end
$scope module MUX_A $end
$var wire 32 %" data0_i [31:0] $end
$var wire 32 &" data2_i [31:0] $end
$var wire 2 '" forward_i [1:0] $end
$var wire 32 (" data1_i [31:0] $end
$var reg 32 )" data_o [31:0] $end
$upscope $end
$scope module MUX_ALUSrc $end
$var wire 32 *" data2_i [31:0] $end
$var wire 1 f select_i $end
$var wire 32 +" data1_i [31:0] $end
$var reg 32 ," data_o [31:0] $end
$upscope $end
$scope module MUX_B $end
$var wire 32 -" data0_i [31:0] $end
$var wire 32 ." data2_i [31:0] $end
$var wire 2 /" forward_i [1:0] $end
$var wire 32 0" data1_i [31:0] $end
$var reg 32 1" data_o [31:0] $end
$upscope $end
$scope module MUX_Mem2Reg $end
$var wire 32 2" data1_i [31:0] $end
$var wire 32 3" data2_i [31:0] $end
$var wire 1 "" select_i $end
$var reg 32 4" data_o [31:0] $end
$upscope $end
$scope module MUX_PCSource $end
$var wire 32 5" data1_i [31:0] $end
$var wire 32 6" data2_i [31:0] $end
$var wire 1 p select_i $end
$var reg 32 7" data_o [31:0] $end
$upscope $end
$scope module PC $end
$var wire 1 [ PCWrite_i $end
$var wire 1 ! clk_i $end
$var wire 32 8" pc_i [31:0] $end
$var wire 1 " rst_i $end
$var wire 1 # start_i $end
$var reg 32 9" pc_o [31:0] $end
$upscope $end
$scope module Registers $end
$var wire 5 :" RDaddr_i [4:0] $end
$var wire 32 ;" RDdata_i [31:0] $end
$var wire 5 <" RS1addr_i [4:0] $end
$var wire 5 =" RS2addr_i [4:0] $end
$var wire 1 R RegWrite_i $end
$var wire 1 ! clk_i $end
$var wire 32 >" RS2data_o [31:0] $end
$var wire 32 ?" RS1data_o [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx ?"
bx >"
bx ="
bx <"
b0 ;"
b0 :"
b0 9"
b100 8"
b100 7"
bx 6"
b100 5"
b0 4"
b0 3"
b0 2"
bx 1"
b0 0"
b0 /"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
b0 ("
b0 '"
bx &"
bx %"
b0 $"
b0 #"
0""
b0 !"
b0 ~
b0 }
bx |
b0 {
b101100000000001010010011 z
bx y
bx x
bx w
bx v
0u
bx t
bx s
bx r
bx q
0p
b0 o
b101100000000001010010011 n
bx m
b0 l
bx k
bx j
b0 i
b0 h
b0 g
0f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
0\
1[
bx Z
bx Y
b0 X
b0 W
b0 V
b0 U
b0 T
b0 S
0R
b0 Q
0P
b0 O
0N
bx M
bx L
bx K
0J
0I
0H
b0 G
0F
bx E
0D
0C
bx B
bx A
b0 @
0?
0>
0=
0<
0;
0:
bx 9
08
bx 7
bx 6
bx 5
bx0 4
b0 3
b100 2
b100 1
b101 0
bx /
0.
b0 -
bx ,
b101 +
bx *
bx )
b0 (
b11 '
b100000 &
b0 %
b0 $
0#
1"
1!
$end
#12
1#
0"
#25
0!
#50
1u
x.
1?
1:
b0 9
b0 ]
b0 a
b0 t
b0 ?"
b0 `
b0 s
b0 >"
b1011 _
b1011 y
b1011 x
bx ("
bx 0"
bx 4"
bx ;"
b10011 7
b0 <"
b1011 ="
b0 Z
b1011 Y
b0 ^
b0 c
b1011 b
b101 d
b1011000000000010100100110 5
b1011000000000010100100110 6"
b1011000000000010100100110 4
b10011 w
b101000000000001100010011 n
b101000000000001100010011 z
b1000 7"
b1000 8"
bx !"
bx 2"
bx G
bx X
bx g
bx T
bx i
bx U
bx h
bx -
bx l
b101100000000001010010011 r
b101100000000001010010011 v
b0 6
b0 q
b1000 2
b1000 5"
b100 3
b100 o
b100 {
b100 9"
b1 $
1!
#75
0!
#100
b1010 _
b1010 y
b1010 x
0.
b1011 ,
b1011 E
b1010 ="
b1010 Y
b1010 b
b110 d
b1010000000000011000100110 4
b0 K
b0 +"
b0 1"
b0 *
b0 )"
b1011 )
b1011 ,"
b101 +
b101 0
b100010111100000011 n
b100010111100000011 z
b1100 7"
b1100 8"
b101000000000001100010011 r
b101000000000001100010011 v
b1010000000000011000101010 5
b1010000000000011000101010 6"
b100 6
b100 q
b101 G
b101 X
b101 g
b1011 T
b1011 i
b0 U
b0 h
b0 -
b0 l
b1011 m
b1011 *"
b0 k
b0 -"
b0 j
b0 %"
1F
1f
b0 /
b0 e
bx O
bx Q
bx }
b1100 2
b1100 5"
b1000 3
b1000 o
b1000 {
b1000 9"
b10 $
1!
#125
0!
#150
b1010 ,
b1010 E
1<
1>
b0 _
b0 y
b0 x
b1010 )
b1010 ,"
b11 7
b100 <"
b0 ="
b100 Z
b0 Y
b10 ^
b100 c
b0 b
b11110 d
b1000101111000000110 4
b11 w
b111100000000001110010011 n
b111100000000001110010011 z
b10000 7"
b10000 8"
bx S
bx #"
bx :"
b101 O
b101 Q
b101 }
b0 A
b0 M
b1011 B
b1011 L
b1011 |
b1011 &"
b1011 ."
1P
b110 G
b110 X
b110 g
b1010 T
b1010 i
b1010 m
b1010 *"
b100010111100000011 r
b100010111100000011 v
b1000101111000001110 5
b1000101111000001110 6"
b1000 6
b1000 q
b10000 2
b10000 5"
b1100 3
b1100 o
b1100 {
b1100 9"
b11 $
1!
#175
0!
#200
0<
0>
b1111 _
b1111 y
b1111 x
b0 ,
b0 E
b10011 7
b0 <"
b1111 ="
b0 Z
b1111 Y
b0 ^
b0 c
b1111 b
b111 d
b1111000000000011100100110 4
b10011 w
b0 )
b0 ,"
b1011 ("
b1011 0"
b1011 4"
b1011 ;"
b1100000000010000010011 n
b1100000000010000010011 z
b10100 7"
b10100 8"
b111100000000001110010011 r
b111100000000001110010011 v
b1111000000000011100110010 5
b1111000000000011100110010 6"
b1100 6
b1100 q
b11110 G
b11110 X
b11110 g
b0 T
b0 i
b100 U
b100 h
b10 -
b10 l
b0 m
b0 *"
1J
1H
b110 O
b110 Q
b110 }
b1010 B
b1010 L
b1010 |
b1010 &"
b1010 ."
b101 S
b101 #"
b101 :"
b1011 !"
b1011 2"
1R
b10100 2
b10100 5"
b10000 3
b10000 o
b10000 {
b10000 9"
b100 $
1!
#225
0!
#250
b101 @
b101 ~
b1111 ,
b1111 E
b11 _
b11 y
b11 x
b1010 ("
b1010 0"
b1010 4"
b1010 ;"
b1111 )
b1111 ,"
b11 ="
b11 Y
b11 b
b1000 d
b11000000000100000100110 4
b101100010010110011 n
b101100010010110011 z
b11000 7"
b11000 8"
b110 S
b110 #"
b110 :"
b1010 !"
b1010 2"
b11110 O
b11110 Q
b11110 }
b0 B
b0 L
b0 |
b0 &"
b0 ."
1D
1N
b111 G
b111 X
b111 g
b1111 T
b1111 i
b0 U
b0 h
b0 -
b0 l
b1111 m
b1111 *"
0J
0H
b1100000000010000010011 r
b1100000000010000010011 v
b11000000000100000110110 5
b11000000000100000110110 6"
b10000 6
b10000 q
b11000 2
b11000 5"
b10100 3
b10100 o
b10100 {
b10100 9"
b101 $
1!
#275
0!
#300
0u
0:
b10 9
b10 ]
b1011 a
b1011 t
b1011 ?"
b10000000100 _
b10000000100 y
b10000000100 x
b11 ,
b11 E
b110011 7
b101 <"
b0 ="
b101 Z
b0 Y
b100 ^
b101 c
b0 b
b1001 d
b1011000100101100110 4
b110011 w
b11 )
b11 ,"
b0 @
b0 ~
b101 ("
b101 0"
b101 4"
b101 ;"
b11000101111111000110011 n
b11000101111111000110011 z
b11100 7"
b11100 8"
b101100010010110011 r
b101100010010110011 v
b1011000100101111010 5
b1011000100101111010 6"
b10100 6
b10100 q
b1000 G
b1000 X
b1000 g
b11 T
b11 i
b11 m
b11 *"
b111 O
b111 Q
b111 }
b1111 B
b1111 L
b1111 |
b1111 &"
b1111 ."
0D
0N
b11110 S
b11110 #"
b11110 :"
b101 $"
b101 3"
b0 !"
b0 2"
1""
b11100 2
b11100 5"
b11000 3
b11000 o
b11000 {
b11000 9"
b110 $
1!
#325
0!
#350
b1110 _
b1110 y
b1110 x
b1011 ,
b1011 E
b1010 `
b1010 s
b1010 >"
b1111 ("
b1111 0"
b1111 4"
b1111 ;"
b1011 *
b1011 )"
b0 )
b0 ,"
b1 +
b1 0
b110 ="
b110 Y
b111 ^
b110 b
b11100 d
b110001011111110001100110 4
b1000000011000101000010000110011 n
b1000000011000101000010000110011 z
b100000 7"
b100000 8"
b111 S
b111 #"
b111 :"
b0 $"
b0 3"
b1111 !"
b1111 2"
0""
b1000 O
b1000 Q
b1000 }
b11 B
b11 L
b11 |
b11 &"
b11 ."
b1001 G
b1001 X
b1001 g
b0 T
b0 i
b101 U
b101 h
b100 -
b100 l
b10000000100 m
b10000000100 *"
b1011 j
b1011 %"
0f
b10 /
b10 e
b11000101111111000110011 r
b11000101111111000110011 v
b110001011111110001111110 5
b110001011111110001111110 6"
b11000 6
b11000 q
b100000 2
b100000 5"
b11100 3
b11100 o
b11100 {
b11100 9"
b111 $
1!
#375
0!
#400
b1000000100 _
b1000000100 y
b1000000100 x
1.
b1010 ,
b1010 E
b100000000 ^
b1000 d
b10000000110001010000100001100110 4
b0 +
b0 0
b1010 )
b1010 ,"
b1010 K
b1010 +"
b1010 1"
b11 ("
b11 0"
b11 4"
b11 ;"
b10011000110000111010110011 n
b10011000110000111010110011 z
b100100 7"
b100100 8"
b1000000011000101000010000110011 r
b1000000011000101000010000110011 v
b10000000110001010000100010000010 5
b10000000110001010000100010000010 6"
b11100 6
b11100 q
b11100 G
b11100 X
b11100 g
b110 T
b110 i
b111 -
b111 l
b1110 m
b1110 *"
b1010 k
b1010 -"
b1001 O
b1001 Q
b1001 }
b1011 B
b1011 L
b1011 |
b1011 &"
b1011 ."
b1000 S
b1000 #"
b1000 :"
b11 !"
b11 2"
b100100 2
b100100 5"
b100000 3
b100000 o
b100000 {
b100000 9"
b1000 $
1!
#425
0!
#450
1u
b10000011110 _
b10000011110 y
b10000011110 x
0.
b1 ,
b1 E
b1010 a
b1010 t
b1010 ?"
b1011 ("
b1011 0"
b1011 4"
b1011 ;"
b110 +
b110 0
b110 <"
b110 Z
b1000 ^
b110 c
b11101 d
b100110001100001110101100110 4
b10011101001000111100110011 n
b10011101001000111100110011 z
b101000 7"
b101000 8"
b1001 S
b1001 #"
b1001 :"
b1011 !"
b1011 2"
b11100 O
b11100 Q
b11100 }
b1010 A
b1010 M
b1010 B
b1010 L
b1010 |
b1010 &"
b1010 ."
b1000 G
b1000 X
b1000 g
b100000000 -
b100000000 l
b1000000100 m
b1000000100 *"
b10011000110000111010110011 r
b10011000110000111010110011 v
b100110001100001110110000110 5
b100110001100001110110000110 6"
b100000 6
b100000 q
b101000 2
b101000 5"
b100100 3
b100100 o
b100100 {
b100100 9"
b1001 $
1!
#475
0!
#500
0u
b11111 _
b11111 y
b11111 x
b1011 a
b1011 t
b1011 ?"
b1111 `
b1111 s
b1111 >"
b1100100 ,
b1100100 E
b1001 <"
b111 ="
b1001 Z
b111 Y
b1001 c
b111 b
b11110 d
b100111010010001111001100110 4
b111 +
b111 0
b1010 *
b1010 )"
b1010 ("
b1010 0"
b1010 4"
b1010 ;"
b100100101010001010100011 n
b100100101010001010100011 z
b101100 7"
b101100 8"
b10011101001000111100110011 r
b10011101001000111100110011 v
b100111010010001111010001010 5
b100111010010001111010001010 6"
b100100 6
b100100 q
b11101 G
b11101 X
b11101 g
b110 U
b110 h
b1000 -
b1000 l
b10000011110 m
b10000011110 *"
b1010 j
b1010 %"
b1000 O
b1000 Q
b1000 }
b1 B
b1 L
b1 |
b1 &"
b1 ."
b11100 S
b11100 #"
b11100 :"
b1010 !"
b1010 2"
b101100 2
b101100 5"
b101000 3
b101000 o
b101000 {
b101000 9"
b1010 $
1!
#525
0!
#550
1u
b101 _
b101 y
b101 x
b10100101 ,
b10100101 E
1=
0?
1:
b0 9
b0 ]
b1011 `
b1011 s
b1011 >"
b1 ("
b1 0"
b1 4"
b1 ;"
b1111 )
b1111 ,"
b1111 K
b1111 +"
b1111 1"
b1011 *
b1011 )"
b100011 7
b101 <"
b1001 ="
b101 Z
b1001 Y
b10 ^
b101 c
b1001 b
b101 d
b1001001010100010101000110 4
b100011 w
b0 n
b0 z
b110000 7"
b110000 8"
b1000 S
b1000 #"
b1000 :"
b1 !"
b1 2"
b11101 O
b11101 Q
b11101 }
b1100100 B
b1100100 L
b1100100 |
b1100100 &"
b1100100 ."
b11110 G
b11110 X
b11110 g
b111 T
b111 i
b1001 U
b1001 h
b11111 m
b11111 *"
b1111 k
b1111 -"
b1011 j
b1011 %"
b100100101010001010100011 r
b100100101010001010100011 v
b1001001010100010101101110 5
b1001001010100010101101110 6"
b101000 6
b101000 q
b110000 2
b110000 5"
b101100 3
b101100 o
b101100 {
b101100 9"
b1011 $
1!
#575
0!
#600
b0 _
b0 y
b0 x
0=
0:
b0 a
b0 t
b0 ?"
b0 `
b0 s
b0 >"
b10000 ,
b10000 E
b0 7
b0 <"
b0 ="
b0 Z
b0 Y
b0 ^
b0 c
b0 b
b0 d
b0 4
b0 w
b101 )
b101 ,"
b101 +
b101 0
b1011 K
b1011 +"
b1011 1"
b1100100 ("
b1100100 0"
b1100100 4"
b1100100 ;"
b110100 7"
b110100 8"
b0 r
b0 v
b101100 5
b101100 6"
b101100 6
b101100 q
b101 G
b101 X
b101 g
b1001 T
b1001 i
b101 U
b101 h
b10 -
b10 l
b101 m
b101 *"
b1011 k
b1011 -"
1I
0F
1f
b0 /
b0 e
b11110 O
b11110 Q
b11110 }
b1111 A
b1111 M
b10100101 B
b10100101 L
b10100101 |
b10100101 &"
b10100101 ."
b11101 S
b11101 #"
b11101 :"
b1100100 !"
b1100100 2"
b110100 2
b110100 5"
b110000 3
b110000 o
b110000 {
b110000 9"
b1100 $
1!
#625
0!
#650
b0 ,
b0 E
b10100101 ("
b10100101 0"
b10100101 4"
b10100101 ;"
b0 K
b0 +"
b0 1"
b0 *
b0 )"
b0 )
b0 ,"
b111000 7"
b111000 8"
b11110 S
b11110 #"
b11110 :"
b10100101 !"
b10100101 2"
b101 O
b101 Q
b101 }
b1011 A
b1011 M
b10000 B
b10000 L
b10000 |
b10000 &"
b10000 ."
1C
0P
b0 G
b0 X
b0 g
b0 T
b0 i
b0 U
b0 h
b0 -
b0 l
b0 m
b0 *"
b0 k
b0 -"
b0 j
b0 %"
0I
0f
b110000 5
b110000 6"
b110000 6
b110000 q
b111000 2
b111000 5"
b110100 3
b110100 o
b110100 {
b110100 9"
b1101 $
1!
#675
0!
#700
b10000 ("
b10000 0"
b10000 4"
b10000 ;"
b111100 7"
b111100 8"
b110100 5
b110100 6"
b110100 6
b110100 q
b0 O
b0 Q
b0 }
b0 A
b0 M
b0 B
b0 L
b0 |
b0 &"
b0 ."
0C
b101 S
b101 #"
b101 :"
b10000 !"
b10000 2"
0R
b111100 2
b111100 5"
b111000 3
b111000 o
b111000 {
b111000 9"
b1110 $
1!
#725
0!
#750
b0 ("
b0 0"
b0 4"
b0 ;"
b1000000 7"
b1000000 8"
b0 S
b0 #"
b0 :"
b0 !"
b0 2"
b111000 5
b111000 6"
b111000 6
b111000 q
b1000000 2
b1000000 5"
b111100 3
b111100 o
b111100 {
b111100 9"
b1111 $
1!
#775
0!
#800
b1000100 7"
b1000100 8"
b111100 5
b111100 6"
b111100 6
b111100 q
b1000100 2
b1000100 5"
b1000000 3
b1000000 o
b1000000 {
b1000000 9"
b10000 $
1!
#825
0!
#850
b1001000 7"
b1001000 8"
b1000000 5
b1000000 6"
b1000000 6
b1000000 q
b1001000 2
b1001000 5"
b1000100 3
b1000100 o
b1000100 {
b1000100 9"
b10001 $
1!
#875
0!
#900
b1001100 7"
b1001100 8"
b1000100 5
b1000100 6"
b1000100 6
b1000100 q
b1001100 2
b1001100 5"
b1001000 3
b1001000 o
b1001000 {
b1001000 9"
b10010 $
1!
#925
0!
#950
b1010000 7"
b1010000 8"
b1001000 5
b1001000 6"
b1001000 6
b1001000 q
b1010000 2
b1010000 5"
b1001100 3
b1001100 o
b1001100 {
b1001100 9"
b10011 $
1!
#975
0!
#1000
b1010100 7"
b1010100 8"
b1001100 5
b1001100 6"
b1001100 6
b1001100 q
b1010100 2
b1010100 5"
b1010000 3
b1010000 o
b1010000 {
b1010000 9"
b10100 $
1!
#1025
0!
#1050
b1011000 7"
b1011000 8"
b1010000 5
b1010000 6"
b1010000 6
b1010000 q
b1011000 2
b1011000 5"
b1010100 3
b1010100 o
b1010100 {
b1010100 9"
b10101 $
1!
#1075
0!
#1100
b1011100 7"
b1011100 8"
b1010100 5
b1010100 6"
b1010100 6
b1010100 q
b1011100 2
b1011100 5"
b1011000 3
b1011000 o
b1011000 {
b1011000 9"
b10110 $
1!
#1125
0!
#1150
b1100000 7"
b1100000 8"
b1011000 5
b1011000 6"
b1011000 6
b1011000 q
b1100000 2
b1100000 5"
b1011100 3
b1011100 o
b1011100 {
b1011100 9"
b10111 $
1!
#1175
0!
#1200
b1100100 7"
b1100100 8"
b1011100 5
b1011100 6"
b1011100 6
b1011100 q
b1100100 2
b1100100 5"
b1100000 3
b1100000 o
b1100000 {
b1100000 9"
b11000 $
1!
#1225
0!
#1250
b1101000 7"
b1101000 8"
b1100000 5
b1100000 6"
b1100000 6
b1100000 q
b1101000 2
b1101000 5"
b1100100 3
b1100100 o
b1100100 {
b1100100 9"
b11001 $
1!
#1275
0!
#1300
b1101100 7"
b1101100 8"
b1100100 5
b1100100 6"
b1100100 6
b1100100 q
b1101100 2
b1101100 5"
b1101000 3
b1101000 o
b1101000 {
b1101000 9"
b11010 $
1!
#1325
0!
#1350
b1110000 7"
b1110000 8"
b1101000 5
b1101000 6"
b1101000 6
b1101000 q
b1110000 2
b1110000 5"
b1101100 3
b1101100 o
b1101100 {
b1101100 9"
b11011 $
1!
#1375
0!
#1400
b1110100 7"
b1110100 8"
b1101100 5
b1101100 6"
b1101100 6
b1101100 q
b1110100 2
b1110100 5"
b1110000 3
b1110000 o
b1110000 {
b1110000 9"
b11100 $
1!
#1425
0!
#1450
b1111000 7"
b1111000 8"
b1110000 5
b1110000 6"
b1110000 6
b1110000 q
b1111000 2
b1111000 5"
b1110100 3
b1110100 o
b1110100 {
b1110100 9"
b11101 $
1!
#1475
0!
#1500
b1111100 7"
b1111100 8"
b1110100 5
b1110100 6"
b1110100 6
b1110100 q
b1111100 2
b1111100 5"
b1111000 3
b1111000 o
b1111000 {
b1111000 9"
b11110 $
1!
#1525
0!
#1550
b10000000 7"
b10000000 8"
b1111000 5
b1111000 6"
b1111000 6
b1111000 q
b10000000 2
b10000000 5"
b1111100 3
b1111100 o
b1111100 {
b1111100 9"
b11111 $
1!
#1575
0!
#1600
b10000100 7"
b10000100 8"
b1111100 5
b1111100 6"
b1111100 6
b1111100 q
b10000100 2
b10000100 5"
b10000000 3
b10000000 o
b10000000 {
b10000000 9"
b100000 $
1!
#1625
0!
#1650
b10001000 7"
b10001000 8"
b10000000 5
b10000000 6"
b10000000 6
b10000000 q
b10001000 2
b10001000 5"
b10000100 3
b10000100 o
b10000100 {
b10000100 9"
b100001 $
1!
#1675
0!
#1700
b10001100 7"
b10001100 8"
b10000100 5
b10000100 6"
b10000100 6
b10000100 q
b10001100 2
b10001100 5"
b10001000 3
b10001000 o
b10001000 {
b10001000 9"
b100010 $
1!
#1725
0!
#1750
b10010000 7"
b10010000 8"
b10001000 5
b10001000 6"
b10001000 6
b10001000 q
b10010000 2
b10010000 5"
b10001100 3
b10001100 o
b10001100 {
b10001100 9"
b100011 $
1!
#1775
0!
#1800
b10010100 7"
b10010100 8"
b10001100 5
b10001100 6"
b10001100 6
b10001100 q
b10010100 2
b10010100 5"
b10010000 3
b10010000 o
b10010000 {
b10010000 9"
b100100 $
1!
#1825
0!
#1850
b10011000 7"
b10011000 8"
b10010000 5
b10010000 6"
b10010000 6
b10010000 q
b10011000 2
b10011000 5"
b10010100 3
b10010100 o
b10010100 {
b10010100 9"
b100101 $
1!
#1875
0!
#1900
b10011100 7"
b10011100 8"
b10010100 5
b10010100 6"
b10010100 6
b10010100 q
b10011100 2
b10011100 5"
b10011000 3
b10011000 o
b10011000 {
b10011000 9"
b100110 $
1!
#1925
0!
#1950
b10100000 7"
b10100000 8"
b10011000 5
b10011000 6"
b10011000 6
b10011000 q
b10100000 2
b10100000 5"
b10011100 3
b10011100 o
b10011100 {
b10011100 9"
b100111 $
1!
#1975
0!
#2000
b10100100 7"
b10100100 8"
b10011100 5
b10011100 6"
b10011100 6
b10011100 q
b10100100 2
b10100100 5"
b10100000 3
b10100000 o
b10100000 {
b10100000 9"
b101000 $
1!
#2025
0!
#2050
b10101000 7"
b10101000 8"
b10100000 5
b10100000 6"
b10100000 6
b10100000 q
b10101000 2
b10101000 5"
b10100100 3
b10100100 o
b10100100 {
b10100100 9"
b101001 $
1!
#2075
0!
#2100
b10101100 7"
b10101100 8"
b10100100 5
b10100100 6"
b10100100 6
b10100100 q
b10101100 2
b10101100 5"
b10101000 3
b10101000 o
b10101000 {
b10101000 9"
b101010 $
1!
#2125
0!
#2150
b10110000 7"
b10110000 8"
b10101000 5
b10101000 6"
b10101000 6
b10101000 q
b10110000 2
b10110000 5"
b10101100 3
b10101100 o
b10101100 {
b10101100 9"
b101011 $
1!
#2175
0!
#2200
b10110100 7"
b10110100 8"
b10101100 5
b10101100 6"
b10101100 6
b10101100 q
b10110100 2
b10110100 5"
b10110000 3
b10110000 o
b10110000 {
b10110000 9"
b101100 $
1!
#2225
0!
#2250
b10111000 7"
b10111000 8"
b10110000 5
b10110000 6"
b10110000 6
b10110000 q
b10111000 2
b10111000 5"
b10110100 3
b10110100 o
b10110100 {
b10110100 9"
b101101 $
1!
#2275
0!
#2300
b10111100 7"
b10111100 8"
b10110100 5
b10110100 6"
b10110100 6
b10110100 q
b10111100 2
b10111100 5"
b10111000 3
b10111000 o
b10111000 {
b10111000 9"
b101110 $
1!
#2325
0!
#2350
b11000000 7"
b11000000 8"
b10111000 5
b10111000 6"
b10111000 6
b10111000 q
b11000000 2
b11000000 5"
b10111100 3
b10111100 o
b10111100 {
b10111100 9"
b101111 $
1!
#2375
0!
#2400
b11000100 7"
b11000100 8"
b10111100 5
b10111100 6"
b10111100 6
b10111100 q
b11000100 2
b11000100 5"
b11000000 3
b11000000 o
b11000000 {
b11000000 9"
b110000 $
1!
#2425
0!
#2450
b11001000 7"
b11001000 8"
b11000000 5
b11000000 6"
b11000000 6
b11000000 q
b11001000 2
b11001000 5"
b11000100 3
b11000100 o
b11000100 {
b11000100 9"
b110001 $
1!
#2475
0!
#2500
b11001100 7"
b11001100 8"
b11000100 5
b11000100 6"
b11000100 6
b11000100 q
b11001100 2
b11001100 5"
b11001000 3
b11001000 o
b11001000 {
b11001000 9"
b110010 $
1!
#2525
0!
#2550
b11010000 7"
b11010000 8"
b11001000 5
b11001000 6"
b11001000 6
b11001000 q
b11010000 2
b11010000 5"
b11001100 3
b11001100 o
b11001100 {
b11001100 9"
b110011 $
1!
#2575
0!
#2600
b11010100 7"
b11010100 8"
b11001100 5
b11001100 6"
b11001100 6
b11001100 q
b11010100 2
b11010100 5"
b11010000 3
b11010000 o
b11010000 {
b11010000 9"
b110100 $
1!
#2625
0!
#2650
b11011000 7"
b11011000 8"
b11010000 5
b11010000 6"
b11010000 6
b11010000 q
b11011000 2
b11011000 5"
b11010100 3
b11010100 o
b11010100 {
b11010100 9"
b110101 $
1!
#2675
0!
#2700
b11011100 7"
b11011100 8"
b11010100 5
b11010100 6"
b11010100 6
b11010100 q
b11011100 2
b11011100 5"
b11011000 3
b11011000 o
b11011000 {
b11011000 9"
b110110 $
1!
#2725
0!
#2750
b11100000 7"
b11100000 8"
b11011000 5
b11011000 6"
b11011000 6
b11011000 q
b11100000 2
b11100000 5"
b11011100 3
b11011100 o
b11011100 {
b11011100 9"
b110111 $
1!
#2775
0!
#2800
b11100100 7"
b11100100 8"
b11011100 5
b11011100 6"
b11011100 6
b11011100 q
b11100100 2
b11100100 5"
b11100000 3
b11100000 o
b11100000 {
b11100000 9"
b111000 $
1!
#2825
0!
#2850
b11101000 7"
b11101000 8"
b11100000 5
b11100000 6"
b11100000 6
b11100000 q
b11101000 2
b11101000 5"
b11100100 3
b11100100 o
b11100100 {
b11100100 9"
b111001 $
1!
#2875
0!
#2900
b11101100 7"
b11101100 8"
b11100100 5
b11100100 6"
b11100100 6
b11100100 q
b11101100 2
b11101100 5"
b11101000 3
b11101000 o
b11101000 {
b11101000 9"
b111010 $
1!
#2925
0!
#2950
b11110000 7"
b11110000 8"
b11101000 5
b11101000 6"
b11101000 6
b11101000 q
b11110000 2
b11110000 5"
b11101100 3
b11101100 o
b11101100 {
b11101100 9"
b111011 $
1!
#2975
0!
#3000
b11110100 7"
b11110100 8"
b11101100 5
b11101100 6"
b11101100 6
b11101100 q
b11110100 2
b11110100 5"
b11110000 3
b11110000 o
b11110000 {
b11110000 9"
b111100 $
1!
#3025
0!
#3050
b11111000 7"
b11111000 8"
b11110000 5
b11110000 6"
b11110000 6
b11110000 q
b11111000 2
b11111000 5"
b11110100 3
b11110100 o
b11110100 {
b11110100 9"
b111101 $
1!
#3075
0!
#3100
b11111100 7"
b11111100 8"
b11110100 5
b11110100 6"
b11110100 6
b11110100 q
b11111100 2
b11111100 5"
b11111000 3
b11111000 o
b11111000 {
b11111000 9"
b111110 $
1!
#3125
0!
#3150
b100000000 7"
b100000000 8"
b11111000 5
b11111000 6"
b11111000 6
b11111000 q
b100000000 2
b100000000 5"
b11111100 3
b11111100 o
b11111100 {
b11111100 9"
b111111 $
1!
#3175
0!
#3200
b100000100 7"
b100000100 8"
b11111100 5
b11111100 6"
b11111100 6
b11111100 q
b100000100 2
b100000100 5"
b100000000 3
b100000000 o
b100000000 {
b100000000 9"
b1000000 $
1!
#3225
0!
#3250
b100001000 7"
b100001000 8"
b100000000 5
b100000000 6"
b100000000 6
b100000000 q
b100001000 2
b100001000 5"
b100000100 3
b100000100 o
b100000100 {
b100000100 9"
1!
